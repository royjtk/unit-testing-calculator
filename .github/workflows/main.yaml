name: CI/CD Pipeline

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main, staging ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: '2.1.2'
      
      - name: Install dependencies
        run: poetry install
      
      - name: Create assets directory
        run: mkdir -p tests/assets
      
      - name: Create CSS file for reports
        run: |
          cat > tests/assets/style.css << 'EOL'
          .coverage-summary {
            margin-top: 20px;
            margin-bottom: 20px;
          }

          .coverage-summary h2 {
            color: #333;
            margin-bottom: 10px;
          }

          .coverage-table {
            border-collapse: collapse;
            width: 100%;
            margin-bottom: 20px;
          }

          .coverage-table th, .coverage-table td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
          }

          .coverage-table th {
            background-color: #f2f2f2;
            font-weight: bold;
          }

          .coverage-table tr:nth-child(even) {
            background-color: #f9f9f9;
          }

          .coverage-table tr:hover {
            background-color: #eaf7ff;
          }

          /* Style for coverage percentages */
          .high-coverage {
            color: green;
          }

          .medium-coverage {
            color: orange;
          }

          .low-coverage {
            color: red;
          }
          EOL
      
      - name: Run tests with coverage
        run: poetry run pytest --cov=src
      
      - name: Generate HTML coverage report
        run: poetry run pytest --html=test_report.html --self-contained-html --css=tests/assets/style.css --cov=src
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test_report.html
          
  build:
    needs: test
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: '2.1.2'
      
      - name: Install dependencies
        run: |
          poetry install
          poetry add pyinstaller
      
      - name: Build executable
        run: poetry run pyinstaller --onefile src/kalkulator/main.py
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kalkulator-app
          path: dist/main.exe

  release:
    needs: build
    # Only run on main branch pushes, not on staging or PRs
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Download built artifact
        uses: actions/download-artifact@v4
        with:
          name: kalkulator-app
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: main.exe
          name: Release ${{ github.run_number }}
          tag_name: v1.0.${{ github.run_number }}
          body: |
            ## Automatic Release from CI/CD Pipeline
            
            Release dari push ke branch main.
            
            ### Included in this release:
            - Executable Windows application
            - Full test coverage
          token: ${{ secrets.GITHUB_TOKEN }}