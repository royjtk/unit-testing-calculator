name: CI/CD Pipeline

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main, staging ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
      
      - name: Install dependencies
        run: poetry install
      
      - name: Run tests with coverage
        run: poetry run pytest --cov=src
      
      - name: Generate HTML coverage report
        run: poetry run pytest --html=test_report.html --self-contained-html --cov=src
      
      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: test-report
          path: test_report.html
          
  build:
    needs: test
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
      
      - name: Install dependencies
        run: |
          poetry install
          poetry add pyinstaller
      
      - name: Build executable
        run: poetry run pyinstaller --onefile src/kalkulator/main.py
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: kalkulator-app
          path: dist/main.exe

  release:
    needs: build
    # Only run on main branch pushes, not on staging or PRs
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Download built artifact
        uses: actions/download-artifact@v2
        with:
          name: kalkulator-app
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: main.exe
          name: Release ${{ github.run_number }}
          tag_name: v1.0.${{ github.run_number }}
          body: |
            ## Automatic Release from CI/CD Pipeline
            
            Release dari push ke branch main.
            
            ### Included in this release:
            - Executable Windows application
            - Full test coverage
          token: ${{ secrets.GITHUB_TOKEN }}